{"version":3,"sources":["components/profile/Profile.module.css","components/transactionHistory/TransactionHistory.module.css","components/statistics/Statistics.module.css","components/friendListItem/FriendListItem.module.css","components/friendList/FriendList.module.css","components/profile/Profile.jsx","components/statistics/Statistics.jsx","utils/randomHexColor.js","components/friendListItem/FriendListItem.jsx","components/friendList/FriendList.jsx","components/transactionHistory/TransactionHistory.jsx","components/App.jsx","index.js"],"names":["module","exports","Profile","_ref","username","tag","location","avatar","stats","_jsxs","className","profile","children","description","_jsx","src","alt","avatarImg","name","identification","adress","list","item","label","quantity","followers","views","likes","Statistics","title","statistics","head","map","stat","style","backgroundColor","concat","Math","floor","random","toString","percentage","id","FriendListItem","_clsx","isOnline","clsx","condition","_defineProperty","offline","online","icon","width","FriendList","friends","_ref2","TransactionHistory","items","chart","header","text","type","amount","currency","line","nuber","App","user","data","transactions","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.dee7cc27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2VM8b\",\"description\":\"Profile_description__15Z3A\",\"avatarImg\":\"Profile_avatarImg__2BTrM\",\"name\":\"Profile_name__UTi5J\",\"list\":\"Profile_list__AaTes\",\"item\":\"Profile_item__Uhc4u\",\"identification\":\"Profile_identification__2GJww\",\"adress\":\"Profile_adress__1xxNU\",\"label\":\"Profile_label__1CkjB\",\"quantity\":\"Profile_quantity__1lZTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"TransactionHistory_chart__2ixBz\",\"header\":\"TransactionHistory_header__3MhTD\",\"text\":\"TransactionHistory_text__nXtw_\",\"nuber\":\"TransactionHistory_nuber__3831H\",\"line\":\"TransactionHistory_line__1XMll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1G8AH\",\"head\":\"Statistics_head__2DooR\",\"list\":\"Statistics_list__3eYkw\",\"item\":\"Statistics_item__V5txQ\",\"label\":\"Statistics_label__4230R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2QuqN\",\"condition\":\"FriendListItem_condition__252jj\",\"offline\":\"FriendListItem_offline__1CxUh\",\"online\":\"FriendListItem_online__2B0tn\",\"icon\":\"FriendListItem_icon__2zomD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__38AQh\"};","import PropTypes from 'prop-types';\nimport {profile, description, avatarImg, name, list, item, identification, adress, label, quantity } from './Profile.module.css'\n\nexport const Profile = ({ username, tag, location, avatar, stats }) => {\n    return (\n            <div className={profile}>\n                <div className={description}>\n                    <img\n                        src={avatar}\n                        alt=\"User avatar\"\n                        className={avatarImg}\n                    />\n                <p className={name}>{username}</p>\n                    <p className={identification}>@{tag}</p>\n                    <p className={adress}>{location}</p>\n                </div>\n\n                <ul className={list}>\n                    <li className={item}>\n                        <span className={label}>Followers</span>\n                        <span className={quantity}>{stats.followers}</span>\n                    </li>\n                    <li className={item}>\n                        <span className={label}>Views</span>\n                        <span className={quantity}>{stats.views}</span>\n                    </li>\n                    <li className={item}>\n                        <span className={label}>Likes</span>\n                        <span className={quantity}>{stats.likes}</span>\n                    </li>\n                </ul>\n            </div>\n    );\n};  \n\n\nProfile.propTypes = {\n    username: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.object.isRequired\n}\n","import PropTypes from 'prop-types';\nimport { randomHexColor } from 'utils/randomHexColor.js';\nimport { statistics, head, list, item, label} from './Statistics.module.css'\n\nexport const Statistics = ({ title, stats }) => {\n    return (\n        <section className={statistics}>\n            {title && <h2 className={head}>{title}</h2>}\n            <ul className={list}>\n                {stats.map(stat => (\n                    <li className={item} key={stat.id} style={{ backgroundColor: randomHexColor() }}>\n                        <span className={label}>{stat.label}</span>\n                        <span>{stat.percentage}%</span>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n};\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.number.isRequired,\n            })\n        ),\n};","export const randomHexColor = () =>  {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}","import PropTypes from 'prop-types';\nimport { clsx } from 'clsx';\nimport { item, condition, offline, online, icon } from \"./FriendListItem.module.css\";\n\nexport const FriendListItem = ({ avatar, name, isOnline, id }) => {\n    return (\n        <li className={item} key={id}>\n            <span className={clsx(condition,\n                { [offline]: !isOnline, [online]: isOnline, }\n        )}>{isOnline}</span>\n            <img className={icon} src={avatar} alt=\"User avatar\" width=\"48\" />\n            <p>{name}</p>\n        </li>\n    );\n};\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    };\n\n","import PropTypes from 'prop-types';\nimport { FriendListItem } from 'components/friendListItem/FriendListItem';\nimport { list } from \"./FriendList.module.css\";\n\nexport const FriendList = ({ friends }) => {\n    return (\n        <ul className={list}>\n            {friends.map(({ avatar, name, isOnline, id }) => (\n                <FriendListItem\n                    avatar={avatar}\n                    name={name}\n                    isOnline={isOnline}\n                    key={id}\n                />\n            ))}\n        </ul>\n    );\n};\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.shape({\n            avatar: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            isOnline: PropTypes.bool.isRequired,\n            id: PropTypes.number.isRequired,\n        })\n    )\n};","import PropTypes from 'prop-types';\nimport { chart, header, text, nuber, line} from './TransactionHistory.module.css'\n\nexport const TransactionHistory = ({ items }) => {\n    return (\n        <table className={chart}>\n            <thead>\n                <tr className={header}>\n                    <th className={text}>Type</th>\n                    <th className={text}>Amount</th>\n                    <th className={text}>Currency</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {items.map(({ id, type, amount, currency }) => (\n                    <tr key={id} className={line}>\n                        <td className={nuber}>{type}</td>\n                        <td className={nuber}>{amount}</td>\n                        <td className={nuber}>{currency}</td>\n                    </tr>\n                )\n                )}\n            </tbody>\n        </table>\n    );\n};\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.string.isRequired,\n            currency: PropTypes.string.isRequired,\n        })\n    )\n};","import { Profile } from './profile/Profile';\nimport { Statistics } from './statistics/Statistics';\nimport { FriendList } from './friendList/FriendList';\nimport { TransactionHistory } from './transactionHistory/TransactionHistory';\n\nimport user from '../data/user.json';\nimport data from '../data/data.json';\nimport friends from '../data/friends.json';\nimport transactions from '../data/transactions.json';\n\nexport const App = () => {\n    return (\n        <div>\n            <Profile\n                username={user.username}\n                tag={user.tag}\n                location={user.location}\n                avatar={user.avatar}\n                stats={user.stats}\n            />\n            <Statistics\n                title=\"Upload stats\"\n                stats={data} \n            />\n            <FriendList \n                friends={friends}\n            />\n            <TransactionHistory\n                items={transactions} \n            />\n\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from './components/App';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n"],"sourceRoot":""}